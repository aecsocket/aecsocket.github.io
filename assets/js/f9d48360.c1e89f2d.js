"use strict";(self.webpackChunkaecsocket_github_io=self.webpackChunkaecsocket_github_io||[]).push([[324],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),s=u(n),m=a,f=s["".concat(p,".").concat(m)]||s[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:3},o="Developer guide",l={unversionedId:"rattle/guide/dev/README",id:"rattle/guide/dev/README",title:"Developer guide",description:"Before starting, make sure you have read Architecture.",source:"@site/docs/rattle/guide/dev/README.md",sourceDirName:"rattle/guide/dev",slug:"/rattle/guide/dev/",permalink:"/rattle/guide/dev/",draft:!1,editUrl:"https://github.com/aecsocket/aecsocket.github.io/blob/main/docs/rattle/guide/dev/README.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"sidebar",previous:{title:"Commands",permalink:"/rattle/guide/user/commands"}},p={},u=[{value:"Dependency",id:"dependency",level:2},{value:"Language",id:"language",level:2},{value:"Platform",id:"platform",level:2},{value:"Documentation",id:"documentation",level:2}],c={toc:u},s="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"developer-guide"},"Developer guide"),(0,a.kt)("p",null,"Before starting, make sure you have read ",(0,a.kt)("a",{parentName:"p",href:"/rattle/guide/architecture"},"Architecture"),"."),(0,a.kt)("h2",{id:"dependency"},"Dependency"),(0,a.kt)("p",null,"Currently the Maven artifacts are not published to any online repo. I'll get them up at some point."),(0,a.kt)("p",null,"Modules:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rattle-api")," - core API classes and utilities"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rattle-rapier")," - Rapier implementation of the API"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rattle-common")," - common tools for implementing Rattle into a platform",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rattle-paper")," - Paper platform implementation"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"rattle-fabric")," - Fabric platform implementation")))),(0,a.kt)("p",null,"See the latest version on the GitHub page."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'dependencies {\n    implementation("io.github.aecsocket", rattleModule, rattleVersion)\n}\n')),(0,a.kt)("h2",{id:"language"},"Language"),(0,a.kt)("p",null,"Rattle is written in Kotlin, however it maintains full Java compatibility - the API will just\nbe slightly less ergonomic. Note that Kotlin docs may not be available when working from Java -\nthis should be resolved in the future. Or not."),(0,a.kt)("h2",{id:"platform"},"Platform"),(0,a.kt)("p",null,"If using a platform, your entry point to Rattle will depend on the platform.\nSee ",(0,a.kt)("a",{parentName:"p",href:"../../platforms/"},"Platforms")," for details."),(0,a.kt)("h2",{id:"documentation"},"Documentation"),(0,a.kt)("p",null,"The API is heavily documented and is the easiest place to find implementation info on certain\nclasses and systems. It should also be integrated into your IDE, so if you need detailed info,\ncheck that first. I plan to write small snippets here as well on how to combine\nthe different parts of the API together."))}d.isMDXComponent=!0}}]);